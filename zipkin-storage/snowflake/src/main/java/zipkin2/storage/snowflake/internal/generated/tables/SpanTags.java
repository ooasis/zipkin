/*
 * Copyright 2015-2018 The OpenZipkin Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This file is generated by jOOQ.
 */
package zipkin2.storage.snowflake.internal.generated.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import zipkin2.storage.snowflake.internal.generated.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpanTags extends TableImpl<Record> {

    private static final long serialVersionUID = 111922253;

    /**
     * The reference instance of <code>PUBLIC.SPAN_TAGS</code>
     */
    public static final SpanTags SPAN_TAGS = new SpanTags();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>PUBLIC.SPAN_TAGS.TRACE_ID</code>.
     */
    public final TableField<Record, String> TRACE_ID = createField("TRACE_ID", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.SPAN_TAGS.ID</code>.
     */
    public final TableField<Record, String> ID = createField("ID", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.SPAN_TAGS.T_KEY</code>.
     */
    public final TableField<Record, String> T_KEY = createField("T_KEY", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.SPAN_TAGS.T_VALUE</code>.
     */
    public final TableField<Record, String> T_VALUE = createField("T_VALUE", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.SPAN_TAGS</code> table reference
     */
    public SpanTags() {
        this(DSL.name("SPAN_TAGS"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.SPAN_TAGS</code> table reference
     */
    public SpanTags(String alias) {
        this(DSL.name(alias), SPAN_TAGS);
    }

    /**
     * Create an aliased <code>PUBLIC.SPAN_TAGS</code> table reference
     */
    public SpanTags(Name alias) {
        this(alias, SPAN_TAGS);
    }

    private SpanTags(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private SpanTags(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SpanTags(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, SPAN_TAGS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpanTags as(String alias) {
        return new SpanTags(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SpanTags as(Name alias) {
        return new SpanTags(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SpanTags rename(String name) {
        return new SpanTags(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SpanTags rename(Name name) {
        return new SpanTags(name, null);
    }
}
